*, *::after, *::before{
    box-sizing: border-box;
}

:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9);
}

body{
    margin: 0;
}

.board{
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
    
}

.cell{
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative; /* para q las 2 lineas de las x sean equidistantes entre si y estén parejas */
    cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: none;
}

.cell:nth-child(3n + 1){
    border-left: none;    
}

.cell:nth-child(3n + 3){
    border-right: none;    
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7){
    border-bottom: none;
}

/* lo reescribimos u pasamos acá el color original para q no se sobreescriba el blue con el hover azul clarito. Hacemos lo = con el hover del circulo,  */
.cell.X::before,
.cell.X::after,
.cell.O::before{
    background-color: blue;
}


.board.X .cell:not(.X):not(.O):hover::before,
.board.X .cell:not(.X):not(.O):hover::after,
.board.O .cell:not(.X):not(.O):hover::before{
    background-color: rgb(186, 225, 238);

}

/* .board.X .cell:not(.X):not(.O):hover::before. Esta linea es para q SOLO se aplique el efecto del hover, en aquellas celdas que se encuentren vacías(q no haya ni X ni O) */
.cell.X::before,
.cell.X::after,
.board.X .cell:not(.X):not(.O):hover::before,
.board.X .cell:not(.X):not(.O):hover::after{
    content: '';
    position: absolute; /* para q las 2 lineas de las x sean equidistantes entre si y estén parejas */
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.X::before,
.board.X .cell:not(.X):not(.O):hover::before{
    transform: rotate(45deg);
}

.cell.X::after,
.board.X .cell:not(.X):not(.O):hover::after{
    transform: rotate(-45deg);
}


.cell.O::before,
.cell.O::after,
.board.O .cell:not(.X):not(.O):hover::before,
.board.O .cell:not(.X):not(.O):hover::after{
    content: '';
    position: absolute; /* para q las 2 lineas de las x sean equidistantes entre si y estén parejas */
    border-radius: 50%;
}


.cell.O::before,
.board.O .cell:not(.X):not(.O):hover::before{
    width: var(--mark-size);
    height: var(--mark-size);    
}

.cell.O::after,
.board.O .cell:not(.X):not(.O):hover::after{
    width: calc(var(--mark-size) * .72);
    height: calc(var(--mark-size) * .72);    
    background-color: white;
}

.cell.X,
.cell.O{
    cursor: not-allowed;
}

.winning-message{
    display: none; /* como no queremos q muestre el cartel de quien ganó x default, agregamos este display. Luego (en l.151 agregamos una clase .show con el display flex para q aparezca el cartel del ganador y el botón de restart para cuando se termine el juego */
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button{
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover{
    background-color: black;
    color: white;
    border-color: white;
}

.winning-message.show{
    display: flex;
}
